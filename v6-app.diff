diff --git a/app/Livewire/Traits/TableHelpers.php b/app/Livewire/Traits/TableHelpers.php
new file mode 100644
index 0000000..b1e2f1a
--- /dev/null
+++ b/app/Livewire/Traits/TableHelpers.php
@@
+<?php
+
+namespace App\Livewire\Traits;
+
+use Livewire\WithPagination;
+
+/**
+ * Shared pagination + search helpers for Livewire table components.
+ * Every table that uses this trait must implement getRowsQuery().
+ */
+trait TableHelpers
+{
+    use WithPagination;
+
+    /** @var string */
+    public $search = '';
+
+    /**
+     * Reset back to page 1 whenever the search string changes.
+     */
+    public function updatingSearch(): void
+    {
+        $this->resetPage();
+    }
+
+    /**
+     * Computed property consumed by the Blade table.
+     */
+    public function getRowsProperty()
+    {
+        return $this->getRowsQuery()
+            ->when($this->search,
+                fn ($q) => $q->where('name', 'like', "%{$this->search}%"))
+            ->paginate(25);
+    }
+
+    /**
+     * Child component must return an Eloquent Builder.
+     */
+    abstract protected function getRowsQuery();
+}
+
diff --git a/app/Livewire/RegistrarTable.php b/app/Livewire/RegistrarTable.php
new file mode 100644
index 0000000..4bd2e0c
--- /dev/null
+++ b/app/Livewire/RegistrarTable.php
@@
+<?php
+
+namespace App\Livewire;
+
+use App\Models\Registrar;
+use Livewire\Component;
+use App\Livewire\Traits\TableHelpers;
+
+class RegistrarTable extends Component
+{
+    use TableHelpers;
+
+    protected function getRowsQuery()
+    {
+        return Registrar::query()->latest();
+    }
+
+    public function render()
+    {
+        return view('livewire.registrar-table', [
+            'rows' => $this->rows,
+        ]);
+    }
+}
+
diff --git a/app/Models/Registrar.php b/app/Models/Registrar.php
new file mode 100644
index 0000000..e31ae73
--- /dev/null
+++ b/app/Models/Registrar.php
@@
+<?php
+
+namespace App\Models;
+
+use Illuminate\Database\Eloquent\Factories\HasFactory;
+use Illuminate\Database\Eloquent\Model;
+
+class Registrar extends Model
+{
+    use HasFactory;
+
+    protected $fillable = [
+        'name',
+        'email',
+        'api_key',
+        'balance',
+        'credit_limit',
+        'status',
+    ];
+
+    /* -----------------------------------------------------------------
+     |  Relations
+     |------------------------------------------------------------------*/
+
+    public function ledger()
+    {
+        return $this->hasMany(Ledger::class);
+    }
+
+    /* -----------------------------------------------------------------
+     |  Helpers
+     |------------------------------------------------------------------*/
+
+    public function credit(float $amount, string $note = ''): void
+    {
+        $this->increment('balance', $amount);
+
+        $this->ledger()->create([
+            'amount' => $amount,
+            'note'   => $note ?: 'Manual credit',
+        ]);
+    }
+}
+
diff --git a/app/Models/ReservedLabel.php b/app/Models/ReservedLabel.php
new file mode 100644
index 0000000..2c4c1e7
--- /dev/null
+++ b/app/Models/ReservedLabel.php
@@
+<?php
+
+namespace App\Models;
+
+use Illuminate\Database\Eloquent\Factories\HasFactory;
+use Illuminate\Database\Eloquent\Model;
+
+class ReservedLabel extends Model
+{
+    use HasFactory;
+
+    protected $fillable = [
+        'tld_id',
+        'label',
+        'reason',
+    ];
+
+    public function tld()
+    {
+        return $this->belongsTo(Tld::class);
+    }
+}
+
diff --git a/app/Models/PremiumLabel.php b/app/Models/PremiumLabel.php
new file mode 100644
index 0000000..b4d1963
--- /dev/null
+++ b/app/Models/PremiumLabel.php
@@
+<?php
+
+namespace App\Models;
+
+use Illuminate\Database\Eloquent\Factories\HasFactory;
+use Illuminate\Database\Eloquent\Model;
+
+class PremiumLabel extends Model
+{
+    use HasFactory;
+
+    protected $fillable = [
+        'tld_id',
+        'label',
+        'fee',
+        'currency',
+    ];
+
+    public function tld()
+    {
+        return $this->belongsTo(Tld::class);
+    }
+}
+
diff --git a/app/Models/Ledger.php b/app/Models/Ledger.php
new file mode 100644
index 0000000..c9d8ffd
--- /dev/null
+++ b/app/Models/Ledger.php
@@
+<?php
+
+namespace App\Models;
+
+use Illuminate\Database\Eloquent\Factories\HasFactory;
+use Illuminate\Database\Eloquent\Model;
+
+class Ledger extends Model
+{
+    use HasFactory;
+
+    protected $fillable = [
+        'registrar_id',
+        'amount',
+        'note',
+    ];
+
+    public function registrar()
+    {
+        return $this->belongsTo(Registrar::class);
+    }
+}
+
